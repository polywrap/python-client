name: CI
on:
  push: 
    branches:
      - main
  pull_request:

jobs:
  getPackages:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ env.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - id: set-matrix
        run: echo "matrix=$(python3 ./scripts/get_packages.py)" >> $GITHUB_ENV
      - name: Read matrix into env.matrix
        run: echo ${{ env.matrix }}
  build:
    runs-on: ubuntu-latest
    needs: 
      - getPackages
    strategy:
      matrix: ${{fromJSON(needs.getPackages.outputs.matrix)}}
    defaults:
      run:
        working-directory: ${{ matrix.package }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Setup Node.js
        uses: actions/setup-node@master
        with:
          node-version: '${{ steps.nvm.outputs.NVMRC }}'
      - name: Install poetry
        run: curl -sSL https://install.python-poetry.org | python3 -
      - name: Install dependencies
        run: poetry install
      - name: Plugin Codegen
        run: poetry run tox -e codegen
        if: contains(matrix.package, '-plugin')
      - name: Config Bundle Codegen
        run: poetry run tox -e codegen
        if: contains(matrix.package, '-config-bundle')
      - name: Typecheck
        run: poetry run tox -e typecheck
      - name: Lint
        run: poetry run tox -e lint
      - name: Security
        run: poetry run tox -e secure
      - name: Test
        run: poetry run tox
