"""
This type stub file was generated by pyright.
"""

from abc import ABC, abstractmethod
from dataclasses import dataclass
from typing import Optional, TYPE_CHECKING
from result import Result
from .uri import Uri
from .uri_resolution_context import IUriResolutionContext
from .client import Client
from .uri_package_wrapper import UriPackageOrWrapper

if TYPE_CHECKING:
    ...
@dataclass(slots=True, kw_only=True)
class TryResolveUriOptions:
    """
    Args:
        no_cache_read: If set to true, the resolveUri function will not use the cache to resolve the uri.
        no_cache_write: If set to true, the resolveUri function will not cache the results
        config: Override the client's config for all resolutions.
        context_id: Id used to track context data set internally.
    """
    uri: Uri
    resolution_context: Optional[IUriResolutionContext] = ...


class IUriResolver(ABC):
    @abstractmethod
    async def try_resolve_uri(self, uri: Uri, client: Client, resolution_context: IUriResolutionContext) -> Result[UriPackageOrWrapper, Exception]:
        ...
    


